#!/bin/sh
#
# Script for updating "oui.c".
# Copyright (c) 2009 Frantisek Hanzlik <franta@hanzlici.cz> (Original author).
# Copyright (c) 2017 Ali Abdulkadir <autostart.ini@gmail.com> (Rewritten for tcpdump).
#
# Organizationally Unique Identifier list obtain from:
# http://standards-oui.ieee.org/oui.txt
#
# This script is pretty specific to GNU utilities.
#
#**********************************************************************
#
# This file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.

# set -ex

JA=${0##*/}
DATE=$(date +'%Y%m%d')
ORIGF=oui.txt
DSTF=oui.c
URL="http://standards-oui.ieee.org/oui.txt"
TMPF=$ORIGF-$DATE
AWK=gawk

die() {
    echo "$*" 1>&2
    exit 1
}

if ! [ -f "$TMPF" -a -s "$TMPF" ]; then
  echo "Downloading \"$ORIGF\" with wget..."
  if [[ -x $(which wget) ]]; then
    wget --continue --quiet --show-progress $URL || die "$JA: Could not download \"$ORIGF\" from $URL."
    mv $ORIGF "$TMPF"
    sed -i '/$/! s/M/^$/' "$TMPF"
  else
    echo -n " with curl..."
    if [[ -x $(which curl) ]]; then
      curl --remote-name --progress-bar $URL || die "$JA: Could not download \"$ORIGF\" from $URL."
      mv $ORIGF "$TMPF"
      sed -i '/$/! s/M/^$/' "$TMPF"
    else
      echo "$JA: Can't obtain \"$URL\"!"
      exit 1
    fi
  fi
else
  echo -n "\"$TMPF\" already exist, skipping download..."
fi
echo ""

echo "Processing $DSTF..."

# Look for "/***" in $DSTF, remove it and everything after it, until the next instance of "/***".
sed -i -e '/\/\*\*\*/,/\/\*\*\*/c\' $DSTF || die "$JA: $DSTF parsing error!"

echo "Processing oui.txt (\"$TMPF\")..."

# if RS is a null string, then records are separated by blank lines...
# but this isn't true in oui.txt

LANG=C $AWK --re-interval --assign JA="$JA" --assign URL="$URL" '
BEGIN {
    RS = "\n([[:blank:]]*\n)+";
    FS = "\n";
    MI = "";
    NN = 0;
    printf( \
      "/***\n" \
      " * Organizationally Unique Identifier list at date %s\n" \
      " * Automatically generated by %s from\n" \
      " * %s\n" \
      " */\n" \
      "\n" \
      "const struct tok oui_values[] = {\n", strftime("%d-%b-%Y"), JA, URL);
}

(/[[:xdigit:]]{6}/) {
    N1 = split($1,A1,/\t+/);
    N2 = split($2,A2,/\t+/);
    N3 = split(A2[1],PN,/ +/);
    V1 = gensub(/^[[:blank:]]+/,"",1,A1[2]);
    V2 = gensub(/^[[:blank:]]+/,"",1,A2[2]);
    V0 = V2;
    if (V0 ~ /^[[:blank:]]*$/) {
        V0 = V1;
    }
    V = gensub(/\"/,"\\\\\"","g",V0);
    if (MI != "")
        printf("    { 0x%s, \"%s\" },\n", MI, MV);
    MI = PN[1];
    MV = V;
    NN++;
}

END {
    printf( \
      "    { 0x%s, \"%s\" },\n" \
      "    { 0xFFFFFF, NULL } /* Since XEROX CORPORATION has value 0, use this */\n" \
      "};\n" \
      "\n" \
      "/*** Total %i items. */\n", MI, MV, NN);
}' <"$TMPF" >>$DSTF

if [ $? -ne 0 ]; then
  die "$JA: $TMPF parsing error !"
else
  echo "Done."
fi
